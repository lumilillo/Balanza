<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABH5JREFUaEPt
        2UnsLFMUx/G/mRDztLAgISEEKxKxFDMPK/OKeBuzjYUhsZBgJSFWtlZCiPAIIoaYh4WZiBgWhicS0zP/
        Pu1/EunXU1VX17/J+yXfdNetW/feqrrn3HNPrWzR/1h7hrPC7eGR8F7YGDat4v+7wTl11oU9wlJox3BR
        eDz8Ef5qyO9hQ7gw7BB6107h2vBlqEH9Ep4KNwRv5rDgiW+3iv/KnLsxPB1cU9d/Ea4JHk4vOi18HGoA
        r4RLwm6hqXYPl4ZXQ7X3UTglLEye1D2hOnwtnBi60snhjVDt3xU6fzv7BwPXwY/h8rBN6FravDL8FPTl
        be8XOtFBwevWMK9zRFi0jgzvB31+GIxhLu0TqsGXw96hL3EOzwV9s0mzopXMz5pOL4SdQ9/S54vBGEyz
        VjZThm06WezWSnuFmhUcQCNxsS5k2H3YxDSxmXIAvNtMstjVOsE7LYuuCsbE+GeaYtcFF7CPRbjYtto2
        vBmMzU1NlDutsKPLxW6a9Muonx0cjZcV39g+DxNjM8GbijxEn7oj6NcTn6StQnnS8xWM0xNBJbFTXzou
        iIJ/C8comKLLgjE+OjgaIS5WgyLSNgFgG1knKmq4RcEMslDa37jxkeM8O2jwycFRP7o76NOU2l7BjHom
        uO6MwdGQap7aT/ShE8KfwdO1TjTRzcFYbxscDckW1MkzB0eLlSnxadDf9QoaqmbPQ4OjIX0QnLSLW7Tu
        Dfricq0PTXV4cL28wGb6JjgptplVXOBENzhCpwf9CDkOVdBConBtfD04GpK56mQTo/s+uObWwMdPk4dU
        C+7VClrKYqgNHnYztbmRc8OvwXWi5WkhzX1BXV5nawUtNfFGvg1ONg3ZTw2iZNc+EMYFdLIn6vwQDlYw
        h2z4tPXV4GhI8xj78eG74PrHwvAmzL7bfHZ+vYI5NdHYy/3KALaRfYvclDZeCv92GvcH5UKgWWxpms4J
        2hvpfmtBlDxrq0PCJ0E7bwX77ItXj72xA0IXmrgg1hyWAZxHBvt20JY4qqacG+pKE0MUwVgFjTKA88i0
        knXRGR4MXYkzqqBxVwWjJKGsY2nMecXgtcfIW6dyRoizMEY2PVYXBJXkYrsQf3/sP387EUfxejDG8xSM
        k45tI1U8ScGSqcKbz8LErS5J7avszpct+cATGtsVCqbJyly7NgnlZVE9YMm6qW+jVNkKEWrTTc8idHT4
        ORhT4+yO9GQ9gSahfdcSV0nKGcudCprKFJMW0oAN0FoksXcJwh1j8DvzlBqWpyEw05AFznFfsvA9H/TN
        Zuf+4OMjS71a0+yosGixiepTVH5g6ESeRk0zDkDutc1ee5q0yTuVYZtO+4ZOxWbKAUAuqquvr1ZsnzJq
        nQDDbm0Ts8j3iXrtkIuVxhR0NhU7EDtV2AFTqbcEurdjelU4AxGp8PqmIO9kF8dtywHAf5svmyJ11K08
        AYQdVuyFvoVx0ql0kISyLUANalaE4qJYAeCa3MAoyR7a6Ni1PRx8e5Qr89Th/zvB9lQddcfuJ7bov62V
        lb8BgSJRz1n8xWsAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>157, 17</value>
  </metadata>
</root>